(version 1)
(deny default)
(allow file-issue-extension
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath "/System/Library"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.executable"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension "com.apple.sandbox.executable")
		(extension-class "com.apple.nsurlsessiond.readonly"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(subpath "/System/Library"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.identityservices.deliver")
		(subpath-prefix "${HOME}/Library/IdentityServices"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container")))
(allow file-link)
(allow file-map-executable)
(allow file-read*
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.demo-settings.plist")
	(literal "/bin/sh")
	(literal "/dev/null")
	(literal "/dev/urandom")
	(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.da.plist")
	(regex #"^/private/var/Managed Preferences/mobile/com[.]apple[.].+[.]plist$")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.ids.deviceproperties.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.imessage.plist")
	(literal-prefix "${HOME}/Library/Logs/awd/awd-identityservicesd.log")
	(literal-prefix "${HOME}/Library/Preferences/com.apple.carrier.plist")
	(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.conference.plist")
	(extension "com.apple.identityservices.send")
	(literal "/dev/zero")
	(literal "/private/var/preferences/com.apple.security.plist")
	(subpath "/usr/share")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.facetime.bag.plist")
	(subpath "/AppleInternal")
	(literal "/dev/ptmx")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.identityservices.idstatuscache.plist")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.setmme")
	(extension "com.apple.sandbox.executable")
	(subpath "/System/Library")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.NanoRegistry.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.registration.plist")
	(subpath "/private/var/db/timezone")
	(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")
	(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
	(extension "com.apple.security.exception.files.home-relative-path.read-only")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.migration.plist")
	(literal "/dev/aes_0")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.persistentconnection.plist")
	(subpath-prefix "${HOME}/Library/Logs/CrashReporter")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.purplebuddy.notbackedup.plist")
	(literal "/private/var/preferences/com.apple.networkd.plist")
	(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
	(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.imessage.bag.plist")
	(literal-prefix "${HOME}/Library/Preferences/com.apple.ids.service.")
	(subpath "/Developer")
	(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
	(extension "com.apple.security.exception.files.absolute-path.read-only")
	(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(subpath "/private/var/tmp")
	(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.ids.subservices.plist")
	(literal "/dev/random")
	(subpath-prefix "${HOME}/Library/Carrier Bundles/Overlay")
	(literal "/dev/dtracehelper")
	(subpath-prefix "${HOME}/Library/IdentityServices")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.identityservicesd.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.marco.plist")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.pairedsync.plist")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(literal "/usr/local/bin/figplaySS")
	(subpath "/usr/lib")
	(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.MobileGestalt.plist")
	(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.DataMigration.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.logging.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.AppSupport.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.purplebuddy.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.ids.plist")
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(regex #"^/private/var/mobile/Library/Logs/PersistentConnection/com[.]apple[.]identityservicesd" #"^/private/var/mobile/Library/Logs/CrashReporter/PersistentConnection/com[.]apple[.]identityservicesd" #"^/private/var/euser[0-9]+/Library/Logs/(CrashReporter/)?PersistentConnection/com[.]apple[.]identityservicesd")
		(subpath-prefix "${FRONT_USER_HOME}"))
	(require-all
		(regex #"^/private/var/Managed Preferences/mobile/com[.]apple[.].+[.]plist$")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(regex #"^/private/var/mobile/Library/ConfigurationProfiles/EffectiveUserSettings.plist$" #"^/private/var/mobile/Library/UserConfigurationProfiles/EffectiveUserSettings.plist$" #"^/private/var/euser[0-9]+/Library/(User)?ConfigurationProfiles/EffectiveUserSettings.plist$")
		(subpath-prefix "${FRONT_USER_HOME}"))
	(require-all
		(regex #"^/private/var/mobile/Library/ConfigurationProfiles/PublicInfo$" #"^/private/var/mobile/Library/ConfigurationProfiles/PublicInfo/" #"^/private/var/mobile/Library/UserConfigurationProfiles/PublicInfo$" #"^/private/var/mobile/Library/UserConfigurationProfiles/PublicInfo/" #"^/private/var/euser[0-9]+/Library/(User)?ConfigurationProfiles/PublicInfo$" #"^/private/var/euser[0-9]+/Library/(User)?ConfigurationProfiles/PublicInfo/")
		(subpath-prefix "${FRONT_USER_HOME}"))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$")
		(subpath-prefix "${HOME}"))
	(require-all
		(vnode-type TTY)
		(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$"))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(subpath-prefix "${HOME}/XcodeBuiltProducts")
		(debug-mode))
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$")
		(subpath-prefix "${HOME}"))
	(require-all
		(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.bulletinboard.plist")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(vnode-type BLOCK-DEVICE)
		(vnode-type CHARACTER-DEVICE)
		(require-any
			(literal "/private/etc/hosts")
			(literal "/private/etc/group")
			(literal "/private/etc/passwd")
			(literal "/")
			(literal "/private/etc/protocols")
			(literal "/private/etc/services")
			(require-all
				(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")
				(require-entitlement "com.apple.coreduetd.people"))
			(require-all
				(literal-prefix "${HOME}/Library/CoreDuet/People")
				(require-entitlement "com.apple.coreduetd.people"))
			(require-all
				(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal")
				(require-entitlement "com.apple.coreduetd.people"))
			(require-all
				(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
				(require-entitlement "com.apple.coreduetd.people"))
			(require-all
				(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
				(require-entitlement "com.apple.coreduetd.people"))))
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$")
		(subpath-prefix "${HOME}"))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/"))))
(allow file-read-metadata
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(literal-prefix "${HOME}")
	(subpath-prefix "${HOME}/Library/Carrier Bundles")
	(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
	(literal-prefix "${HOME}/Library/PPTDevice")
	(vnode-type SYMLINK)
	(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
	(literal-prefix "${HOME}/Library/Preferences")
	(literal "/private/var/run/syslog")
	(vnode-type DIRECTORY)
	(literal-prefix "${HOME}/Library/Logs/awd")
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send"))
	(require-all
		(vnode-type DIRECTORY)
		(literal-prefix "${HOME}/Library/Logs/awd"))
	(require-all
		(literal-prefix "${HOME}")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(literal-prefix "${HOME}/Library/Preferences")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive")))
(allow file-write*
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.DataMigration.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.identityservices.idstatuscache.plist")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(subpath-prefix "${HOME}/Library/Logs/CrashReporter")
	(subpath-prefix "${HOME}/Library/IdentityServices")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.identityservicesd.plist")
	(literal-prefix "${HOME}/Library/Logs/awd/awd-identityservicesd.log")
	(extension "com.apple.identityservices.send")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.ids.deviceproperties.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.conference.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.ids.subservices.plist")
	(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
	(literal-prefix "${HOME}/Library/Preferences/com.apple.ids.service.")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.imessage.bag.plist")
	(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
	(subpath "/private/var/tmp")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.ids.plist")
	(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.facetime.bag.plist")
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(regex #"^/private/var/mobile/Library/Logs/PersistentConnection/com[.]apple[.]identityservicesd" #"^/private/var/mobile/Library/Logs/CrashReporter/PersistentConnection/com[.]apple[.]identityservicesd" #"^/private/var/euser[0-9]+/Library/Logs/(CrashReporter/)?PersistentConnection/com[.]apple[.]identityservicesd")
		(subpath-prefix "${FRONT_USER_HOME}"))
	(require-all
		(vnode-type BLOCK-DEVICE)
		(vnode-type CHARACTER-DEVICE)
		(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal")
		(require-entitlement "com.apple.coreduetd.people")))
(allow file-write-create
	(require-all
		(vnode-type DIRECTORY)
		(literal-prefix "${HOME}/Library/Logs/awd"))
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(require-any
			(require-all
				(vnode-type REGULAR-FILE)
				(extension "com.apple.private.safe-move.send"))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection"))))))
(allow file-write-data
	(literal "/dev/ptmx")
	(literal "/dev/aes_0")
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send"))
	(require-all
		(require-not (literal "/dev/random"))
		(require-not (literal "/dev/urandom"))
		(require-any
			(literal "/dev/dtracehelper")
			(literal "/dev/null")
			(literal "/dev/zero")
			(require-all
				(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
				(require-entitlement "com.apple.coreduetd.people"))))
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(vnode-type TTY)
		(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$")))
(allow file-write-mode
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty")))
(allow file-write-unlink
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive")))
(allow iokit-get-properties)
(allow mach-bootstrap)
(allow mach-cross-domain-lookup)
(allow mach-lookup
	(global-name "com.apple.ReportCrash.SimulateCrash")
	(global-name "com.apple.hangtracerd")
	(global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.server.bluetooth.le.pipe.xpc")
	(global-name "com.apple.lsd.advertisingidentifiers")
	(global-name "com.apple.fairplayd.versioned")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.tccd")
	(global-name "com.apple.mobileactivationd")
	(global-name "com.apple.server.bluetooth")
	(global-name "com.apple.marco")
	(global-name "com.apple.absd")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.server.bluetooth.le.att.xpc")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.idsremoteurlconnectionagent.embedded.auth")
	(global-name "com.apple.coreduetd")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(global-name "com.apple.WirelessCoexManager")
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.datamigrator")
	(global-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.GSSCred")
	(global-name "com.apple.cookied")
	(global-name "com.apple.coreservices.lsuseractivitymanager.xpc")
	(global-name "com.apple.system.logger")
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(global-name "com.apple.assertiond.applicationstateconnection")
	(global-name "com.apple.ctkd.token-client")
	(global-name "com.apple.duetknowledged.activity")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.diagnosticd")
	(global-name "com.apple.containermanagerd")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.aggregated")
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.nsurlstorage-cache")
	(global-name "com.apple.lsd.open")
	(global-name "com.apple.cfprefsd.daemon")
	(global-name "com.apple.apsd")
	(global-name "com.apple.mobile.keybagd.UserManager.xpc")
	(global-name "com.apple.lsd")
	(global-name "com.apple.imtransferservices.IMTransferAgent")
	(global-name "com.apple.wirelessproxd")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.assertiond.processassertionconnection")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.awdd")
	(global-name "com.apple.securityd")
	(global-name "com.apple.lsd.icons")
	(global-name "com.apple.absinthed")
	(global-name "com.apple.networkd")
	(global-name "com.apple.idscredentialsagent.embedded.auth")
	(global-name "com.apple.lsd.openurl")
	(global-name "com.apple.mobile.keybagd.xpc")
	(global-name-regex #"-idswake$" #".+-idswake$")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.pairedsyncd.syncstate")
	(global-name "com.apple.system.notification_center")
	(global-name "com.apple.CoreAuthentication.daemon.libxpc")
	(global-name "com.apple.managedconfiguration.profiled.public")
	(global-name "com.apple.mobilegestalt.xpc")
	(global-name "com.apple.trustd")
	(global-name "com.apple.appsupport.cplogd")
	(global-name "com.apple.xpcd")
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")
			(require-entitlement "platform-application")))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.local-name")
		(local-name-regex #".+"))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")
			(require-entitlement "platform-application")))
	(require-all
		(global-name "com.apple.bulletinboard.dataproviderconnection")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-entitlement "com.apple.networkd_privileged"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(require-entitlement "com.apple.coreduetd.people"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.global-name")
		(global-name-regex #".+")))
(allow network-inbound
	(local ip "*:*"))
(allow network-outbound
	(require-all
		(require-not (regex #"^/private/tmp/launchd-[0-9]+[.][^/]+/sock$"))
		(require-any
			(literal "/private/var/run/mDNSResponder")
			(control-name "com.apple.network.statistics")
			(literal "/private/var/run/lockdown.sock")
			(literal "/private/var/run/syslog")
			(remote ip "*:*")
			(control-name "com.apple.netsrc"))))
(allow nvram*)
(allow nvram-delete)
(allow nvram-get)
(allow nvram-set)
(allow user-preference-read
	(extension "com.apple.security.exception.shared-preference.read-write")
	(extension "com.apple.security.exception.shared-preference.read-only")
	(preference-domain "com.apple.ids")
	(preference-domain "com.apple.migration")
	(preference-domain "com.apple.imessage")
	(preference-domain "com.apple.ids.subservices")
	(preference-domain "com.apple.purplebuddy")
	(preference-domain "com.apple.facetime.bag")
	(preference-domain "com.apple.pairedsync")
	(preference-domain "com.apple.imessage.bag")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.registration")
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "com.apple.purplebuddy.notbackedup")
	(preference-domain "com.apple.carrier")
	(preference-domain "com.apple.identityservicesd")
	(preference-domain "com.apple.identityservices.idstatuscache")
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.NanoRegistry")
	(preference-domain "com.apple.ids.deviceproperties")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.marco")
	(preference-domain "com.apple.logging")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.conference")
	(require-all
		(preference-domain "com.apple.bulletinboard")
		(require-entitlement "com.apple.bulletinboard.dataprovider")))
(allow user-preference-write
	(extension "com.apple.security.exception.shared-preference.read-write")
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.ids")
	(preference-domain "com.apple.ids.deviceproperties")
	(preference-domain "com.apple.imessage.bag")
	(preference-domain "com.apple.ids.subservices")
	(preference-domain "com.apple.identityservicesd")
	(preference-domain "com.apple.facetime.bag")
	(preference-domain "com.apple.identityservices.idstatuscache")
	(preference-domain "com.apple.conference"))
(allow process-exec*
	(literal "/bin/sh")
	(literal "/usr/local/bin/figplaySS"))
(allow process-fork)
(allow process-info*)
(allow process-info-listpids)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow process-info-dirtycontrol)
(allow process-info-rusage)
(allow pseudo-tty)
(allow sysctl-read)
(allow system-privilege)
