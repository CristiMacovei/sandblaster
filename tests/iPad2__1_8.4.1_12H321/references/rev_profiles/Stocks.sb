(version 1)
(deny default)
(allow file-ioctl
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(literal "/dev/aes_0")
			(literal "/dev/ptmx")
			(literal "/dev/dtracehelper"))))
(allow file-issue-extension
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(extension-class "com.apple.quicklook.readonly")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath "/private/var/mobile/Library/Cookies"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(extension "com.apple.app-sandbox.read-write"))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(extension "com.apple.app-sandbox.read-write"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath "/System/Library"))
			(require-all
				(extension "com.apple.librarian.ubiquity-container")
				(subpath "/private/var/mobile/Library/Mobile Documents")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.app-sandbox.read")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]stocks/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]stocks$"))
			(require-all
				(subpath "/private/var/tmp")
				(require-any
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.app-sandbox.read-write")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "com.apple.security.exception.files.absolute-path.read-only"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "com.apple.app-sandbox.read-write"))
			(require-all
				(extension "com.apple.assets.read")
				(subpath "/private/var/mobile/Library/Assets")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.app-sandbox.read")))
			(require-all
				(extension "com.apple.sandbox.executable")
				(extension-class "com.apple.nsurlsessiond.readonly"))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(extension "com.apple.app-sandbox.read-write"))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(extension "com.apple.security.exception.files.absolute-path.read-write"))
			(require-all
				(extension-class "com.apple.nsurlstorage.extension-cache")
				(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]stocks/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]stocks$"))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(subpath "/private/var/mobile/Library/Cookies"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "com.apple.sandbox.executable"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath "/private/var/mobile/Library/Cookies"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]stocks/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]stocks$"))
			(require-all
				(subpath "/private/var/mobile/Library/Mobile Documents")
				(require-any
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(require-any
							(extension "com.apple.librarian.ubiquity-container")
							(require-entitlement "com.apple.private.librarian.container-proxy")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "com.apple.librarian.ubiquity-container")
							(require-entitlement "com.apple.private.librarian.container-proxy")))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "com.apple.security.exception.files.absolute-path.read-write")))))
(allow file-read*
	(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.NanoRegistry.plist")
	(extension "com.apple.security.exception.files.absolute-path.read-only")
	(subpath "/private/var/db/timezone")
	(subpath "/usr/lib")
	(extension "com.apple.sandbox.executable")
	(literal "/private/var/mobile/Library/Preferences/.GlobalPreferences.plist")
	(subpath "/System/Library")
	(regex #"^/private/var/Managed Preferences/mobile/com[.]apple[.].+[.]plist$")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(literal "/private/var/preferences/com.apple.networkd.plist")
	(subpath "/System/Library/PrivateFrameworks")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.logging.plist")
	(subpath "/usr/share")
	(subpath "/System/Library/Frameworks")
	(subpath "/private/var/tmp")
	(require-all
		(subpath "/Developer")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")
			(require-not (require-entitlement "platform-application"))))
	(require-all
		(subpath "/private/var/mobile/XcodeBuiltProducts")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")))
	(require-all
		(require-not (regex #"^/private/var/mobile/Containers/$" #"^/private/var/mobile/Containers/.+$"))
		(require-any
			(literal "/dev/dtracehelper")
			(literal "/private/var/mobile/Library/Preferences/com.apple.coremedia.plist")
			(subpath "/private/var/mobile/Library/Cookies")
			(literal "/private/var/mobile/Library/Caches/DateFormats.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.WebUI.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.WebFoundation.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.itunesstored.plist")
			(regex #"^/private/var/Managed Preferences/mobile/com[.]apple[.].+[.]plist$")
			(subpath "/private/var/mobile/Library/ConfigurationProfiles/PublicInfo")
			(literal "/private/var/mobile/Library/Preferences/com.apple.voiceservices.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.ConfigServer.plist")
			(extension "com.apple.app-sandbox.read")
			(literal "/private/var/mobile/Library/Preferences/com.apple.CoreMotion.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.GEO.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.UIKit.plist")
			(subpath "/Library/Dictionaries")
			(literal "/private/var/mobile/Library/Preferences/com.apple.AppSupport.plist")
			(literal "/private/var/mobile/Library/Preferences/.GlobalPreferences.plist")
			(literal "/dev/random")
			(literal "/private/var/mobile/Library/Preferences/com.apple.MobileAsset.plist")
			(subpath "/AppleInternal/Library/Frameworks/RadarCompose.framework")
			(literal "/private/var/mobile/Library/Preferences/com.apple.DataAccess.BehaviorOptions.plist")
			(regex #"^/private/var/Managed Preferences/mobile/com[.]apple[.].+[.]plist$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
			(literal "/private/var/mobile/Library/Preferences/com.apple.MapKit.internal.plist")
			(literal "/dev/aes_0")
			(literal "/private/var/preferences/SystemConfiguration/com.apple.sinaweibo.plist")
			(extension "com.apple.app-sandbox.read-write")
			(literal "/private/var/mobile/Library/Preferences/com.apple.stocks.plist")
			(subpath "/private/var/mobile/Library/Dictionaries")
			(literal "/private/var/mobile/Library/Preferences/com.apple.preferences.sounds.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.SpeakSelection.plist")
			(literal "/private/var/preferences/SystemConfiguration/com.apple.linkedin.plist")
			(literal "/private/var/mobile/Library/Keyboard/LocalDictionary")
			(literal "/private/var/mobile/Library/Preferences/com.apple.assistant.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.carrier.plist")
			(subpath "/private/var/mobile/Library/Caches/com.apple.UIStatusBar")
			(subpath "/private/var/mobile/Library/Carrier Bundles/Overlay")
			(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
			(regex #"^/private/var/Managed Preferences/mobile/com[.]apple[.].+[.]plist$" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]stocks[.]plist" #"^/private/var/mobile/Library/SyncedPreferences/com[.]apple[.]stocks[.]plist" #"^/private/var/mobile/Library/SyncedPreferences/com[.]apple[.]stocks-.+[.]plist" #"^/private/var/mobile/Library/Caches/Snapshots/com[.]apple[.]stocks-" #"^/private/var/mobile/Library/Caches/Snapshots/com[.]apple[.]stocks/" #"^/private/var/mobile/Library/Caches/Snapshots/com[.]apple[.]stocks$")
			(subpath "/private/var/mobile/Library/Caches/com.apple.IconsCache")
			(literal "/private/var/mobile/Library/Preferences/com.apple.mt.plist")
			(literal "/private/var/preferences/SystemConfiguration/com.apple.twitter.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.locationd.plist")
			(literal "/dev/zero")
			(literal "/dev/urandom")
			(literal "/private/var/mobile/Library/Preferences/com.apple.avfoundation.plist")
			(subpath "/private/var/mobile/Library/Fonts")
			(regex #"^/private/var/Managed Preferences/mobile/com[.]apple[.].+[.]plist$" #"^/private/var/mobile/Documents/com[.]apple[.]stocks[.]settings$" #"^/private/var/mobile/Documents/com[.]apple[.]stocks[.]settings/" #"^/private/var/mobile/Library/Saved Application State/com[.]apple[.]stocks.savedState/")
			(literal "/private/var/mobile/Library/Preferences/com.apple.telephonyutilities.dialassist.plist")
			(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
			(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.assistant.support.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.coreaudio.plist")
			(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.da.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.logging.plist")
			(subpath "/private/var/mobile/Library/VoiceServices/Assets")
			(regex #"^/private/var/Managed Preferences/mobile/com[.]apple[.].+[.]plist$" #"^/private/var/mobile/Library/Stocks$" #"^/private/var/mobile/Library/Stocks/")
			(literal "/private/var/mobile/Library/Preferences/com.apple.EmojiPreferences.plist")
			(literal "/private/var/mobile/Library/Caches/com.apple.itunesstored/url-resolution.plist")
			(literal "/private/var/mobile/Library/Caches/com.apple.pep.configuration.plist")
			(literal "/private/var/mobile/Library/Caches/com.apple.MobileGestalt.plist")
			(literal "/dev/ptmx")
			(literal "/private/var/mobile/Library/Preferences/com.apple.Sharing.plist")
			(literal "/private/var/preferences/com.apple.networkd.plist")
			(literal "/private/var/preferences/SystemConfiguration/com.apple.facebook.plist")
			(literal "/dev/null")
			(literal "/private/var/mobile/Library/Preferences/com.apple.Accessibility.plist")
			(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$")
			(literal "/private/var/mobile/Library/Preferences/com.apple.demo-settings.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.iokit.IOMobileGraphicsFamily.plist")
			(literal "/com.apple.xpc.launchd.bootstrap.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.mediaaccessibility.plist")
			(subpath "/private/var/mobile/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice")
			(literal "/private/var/mobile/Library/Preferences/com.apple.corevideo.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.nanoprefsyncd.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.keyboard.plist")
			(subpath "/private/var/tmp")
			(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]stocks/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]stocks$")
			(subpath "/private/var/mobile/Library/Caches/com.apple.keyboards")
			(literal "/private/var/mobile/Library/Preferences/com.apple.InputModePreferences.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.mediaaccessibility.public.plist")
			(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$")
			(literal "/private/var/mobile/Library/Preferences/com.apple.Preferences.plist")
			(require-all
				(subpath "/private/var/.DocumentRevisions-V100/staging")
				(require-any
					(extension "com.apple.revisiond.staging")
					(extension "com.apple.app-sandbox.read-write")))
			(require-all
				(regex #"^/private/var/Managed Preferences/mobile/com[.]apple[.].+[.]plist$")
				(require-entitlement "com.apple.bulletinboard.dataprovider"))
			(require-all
				(vnode-type TTY)
				(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$"))
			(require-all
				(vnode-type REGULAR-FILE)
				(subpath "/private/var/mobile/Library/Application Support/CloudDocs/session/r")
				(extension "com.apple.clouddocs.version"))
			(require-all
				(literal "/private/var/mobile/Library/Preferences/com.apple.bulletinboard.plist")
				(require-entitlement "com.apple.bulletinboard.dataprovider"))
			(require-all
				(subpath "/private/var/mobile/Library/Application Support/Ubiquity/genstore")
				(extension "com.apple.librarian.ubiquity-revision"))
			(require-all
				(subpath "/private/var/.DocumentRevisions-V100/PerUID")
				(require-any
					(extension "com.apple.revisiond.revision")
					(extension "com.apple.app-sandbox.read")))
			(require-all
				(vnode-type REGULAR-FILE)
				(regex #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]stocks/" #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]stocks$"))
			(require-all
				(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
				(extension "com.apple.sandbox.pty"))
			(require-all
				(vnode-type DIRECTORY)
				(regex #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]stocks/" #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]stocks$"))
			(require-all
				(require-not (vnode-type BLOCK-DEVICE))
				(require-not (vnode-type CHARACTER-DEVICE))
				(require-any
					(literal "/private/etc/group")
					(literal "/private/etc/passwd")
					(require-not (regex #"^/private/var/mobile/Library/"))
					(literal "/private/etc/protocols")
					(literal "/private/etc/hosts")
					(literal "/")
					(literal "/private/etc/services")))
			(require-all
				(subpath "/private/var/mobile/Library/Assets")
				(extension "com.apple.assets.read"))
			(require-all
				(subpath "/private/var/mobile/Library/Mobile Documents")
				(require-any
					(extension "com.apple.librarian.ubiquity-container")
					(require-entitlement "com.apple.private.librarian.container-proxy")))))
	(require-all
		(subpath "/private/var/tmp")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode"))))
(allow file-read-metadata
	(literal "/private/var/run/syslog")
	(literal "/private/var/mobile/Library/PPTDevice")
	(regex #"^/private/var/mobile/Library/Saved Application State/com[.]apple[.]stocks.savedState")
	(literal "/private/var/mobile/Library/Mobile Documents")
	(literal "/private/var/mobile/Library/Caches/powerlog.launchd")
	(literal "/private/var/mobile/Library/Saved Application State")
	(vnode-type SYMLINK)
	(literal "/private/var/mobile")
	(literal "/private/var/mobile/Library/Caches")
	(subpath "/private/var/mobile/Library/Carrier Bundles")
	(literal "/private/var/mobile/Library/Caches/com.apple.DictionaryServices")
	(literal "/private/var/mobile/Library")
	(vnode-type DIRECTORY)
	(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$")
	(literal "/private/var/mobile/Library/Preferences")
	(literal "/private/var/mobile/Library/Caches/Snapshots")
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send"))
	(require-all
		(literal "/private/var/mobile")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "/private/var/mobile/Library/Caches/Snapshots"))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "/private/var/mobile/Library/Caches"))
	(require-all
		(vnode-type DIRECTORY)
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$"))
	(require-all
		(literal "/private/var/mobile/Library/Preferences")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "/private/var/mobile/Library/Saved Application State"))
	(require-all
		(vnode-type DIRECTORY)
		(regex #"^/private/var/mobile/Library/Saved Application State/com[.]apple[.]stocks.savedState"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "/private/var/mobile/Library/Caches/com.apple.DictionaryServices")))
(allow file-write*
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(subpath "/private/var/tmp")
			(require-all
				(subpath "/private/var/tmp")
				(require-any
					(debug-mode)
					(require-entitlement "com.apple.private.security.sandbox.debug-mode")))
			(require-all
				(require-not (regex #"^/private/var/mobile/Containers/$" #"^/private/var/mobile/Containers/.+$"))
				(require-not (regex #"^/private/var/mobile/Library/Preferences/com[.]apple[.]springboard[.]plist"))
				(require-not (literal "/private/var/mobile/Library/Caches/DateFormats.plist"))
				(require-any
					(literal "/private/var/mobile/Library/Caches/com.apple.pep.configuration.plist")
					(regex #"^/private/var/mobile/Library/Preferences/com[.]apple[.]stocks[.]plist" #"^/private/var/mobile/Library/Stocks$" #"^/private/var/mobile/Library/Stocks/")
					(subpath "/private/var/tmp")
					(subpath "/private/var/mobile/Library/Caches/com.apple.keyboards")
					(literal "/private/var/mobile/Library/Keyboard/LocalDictionary")
					(subpath "/private/var/mobile/Library/Cookies")
					(regex #"^/private/var/mobile/Library/Preferences/com[.]apple[.]Preferences[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]EmojiPreferences[.]plist")
					(regex #"^/private/var/mobile/Library/Preferences/com[.]apple[.]mediaaccessibility[.]public[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]stocks[.]plist" #"^/private/var/mobile/Library/Caches/Snapshots/com[.]apple[.]stocks-" #"^/private/var/mobile/Library/Caches/Snapshots/com[.]apple[.]stocks/" #"^/private/var/mobile/Library/Caches/Snapshots/com[.]apple[.]stocks$" #"^/private/var/mobile/Documents/com[.]apple[.]stocks[.]settings$" #"^/private/var/mobile/Documents/com[.]apple[.]stocks[.]settings/" #"^/private/var/mobile/Library/Saved Application State/com[.]apple[.]stocks.savedState/")
					(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]stocks/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]stocks$")
					(extension "com.apple.app-sandbox.read-write")
					(require-all
						(subpath "/private/var/.DocumentRevisions-V100/staging")
						(require-any
							(extension "com.apple.revisiond.staging")
							(extension "com.apple.app-sandbox.read-write")))
					(require-all
						(vnode-type DIRECTORY)
						(regex #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]stocks/" #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]stocks$"))
					(require-all
						(subpath "/private/var/mobile/Library/Mobile Documents")
						(require-any
							(extension "com.apple.librarian.ubiquity-container")
							(require-entitlement "com.apple.private.librarian.container-proxy")))
					(require-all
						(vnode-type REGULAR-FILE)
						(regex #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]stocks/" #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]stocks$")))))))
(allow file-write-create
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(require-all
				(vnode-type DIRECTORY)
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$"))
			(require-all
				(require-not (regex #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_"))
				(require-any
					(require-all
						(require-not (regex #"^/private/var/mobile/Library/Preferences/com[.]apple[.]Accessibility[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]UIKit[.]plist"))
						(require-any
							(require-all
								(vnode-type DIRECTORY)
								(literal "/private/var/mobile/Library/Saved Application State"))
							(require-all
								(vnode-type DIRECTORY)
								(regex #"^/private/var/mobile/Library/Saved Application State/com[.]apple[.]stocks.savedState"))
							(require-all
								(vnode-type DIRECTORY)
								(literal "/private/var/mobile/Library/Caches/Snapshots"))
							(require-all
								(require-not (regex #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_"))
								(vnode-type REGULAR-FILE)
								(extension "com.apple.private.safe-move.send"))
							(require-all
								(vnode-type DIRECTORY)
								(literal "/private/var/mobile/Library/Caches"))))
					(require-all
						(vnode-type DIRECTORY)
						(literal "/private/var/mobile/Library/Caches/com.apple.DictionaryServices")))))))
(allow file-write-data
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(literal "/dev/ptmx")
			(literal "/dev/aes_0")
			(require-all
				(vnode-type TTY)
				(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$"))
			(require-all
				(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
				(extension "com.apple.sandbox.pty"))
			(require-all
				(require-not (literal "/dev/urandom"))
				(require-not (literal "/dev/random"))
				(require-any
					(literal "/dev/zero")
					(literal "/dev/dtracehelper")
					(literal "/dev/null")))
			(require-all
				(vnode-type REGULAR-FILE)
				(extension "com.apple.private.safe-move.send")))))
(allow file-write-mode
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty")))
(allow file-write-unlink
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive")))
(allow iokit-open)
(allow iokit-set-properties)
(allow iokit-get-properties)
(allow ipc-posix-shm*
	(require-all
		(ipc-posix-name-regex #"^/FSM-" #"^OA-" #"^stack-logs" #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")
			(require-not (require-entitlement "platform-application")))))
(allow ipc-posix-shm-read*
	(ipc-posix-name "apple.shm.notification_center")
	(ipc-posix-name-regex #"^Apple MIDI in [0-9]+$" #"^Apple MIDI out [0-9]+$" #"^apple[.]shm[.]cfprefsd[.]"))
(allow ipc-posix-shm-write-data
	(ipc-posix-name-regex #"^Apple MIDI in [0-9]+$" #"^Apple MIDI out [0-9]+$"))
(allow mach-bootstrap)
(allow mach-lookup)
(allow mach-register
	(local-name "com.apple.iphone.axserver")
	(global-name-regex #"^com[.]apple[.]assistant[.]contextprovider[.]")
	(local-name "com.apple.accessibility.gax.client")
	(local-name-regex #"^com[.]apple[.]assistant[.]contextprovider[.]"))
(allow network-outbound
	(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/" #"^/private/tmp/launchd-[0-9]+[.][^/]+/sock$")))
(allow user-preference-read
	(preference-domain "com.apple.WebFoundation")
	(preference-domain "com.apple.stocks")
	(preference-domain "com.apple.Preferences")
	(preference-domain "com.apple.NanoRegistry")
	(preference-domain "com.apple.DataAccess.BehaviorOptions")
	(preference-domain "com.apple.MapKit.internal")
	(preference-domain "com.apple.SpeakSelection")
	(preference-domain "com.apple.logging")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(preference-domain "com.apple.voiceservices")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.ConfigServer")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.WebUI")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.nanoprefsyncd")
	(preference-domain "com.apple.locationd")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.MobileAsset")
	(preference-domain "com.apple.preferences.sounds")
	(extension "com.apple.security.exception.shared-preference.read-only")
	(preference-domain "com.apple.telephonyutilities.dialassist")
	(preference-domain "com.apple.mediaaccessibility")
	(preference-domain "com.apple.EmojiPreferences")
	(preference-domain "com.apple.InputModePreferences")
	(preference-domain "com.apple.CoreMotion")
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.Sharing")
	(preference-domain ".GlobalPreferences")
	(preference-domain "com.apple.assistant")
	(preference-domain "com.apple.itunesstored")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.mt")
	(preference-domain "com.apple.keyboard")
	(preference-domain "com.apple.GEO")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.mediaaccessibility.public")
	(preference-domain "com.apple.UIKit")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.corevideo")
	(require-all
		(preference-domain "com.apple.bulletinboard")
		(require-entitlement "com.apple.bulletinboard.dataprovider")))
(allow user-preference-write
	(preference-domain "com.apple.mediaaccessibility.public")
	(preference-domain "com.apple.EmojiPreferences")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(preference-domain "com.apple.stocks")
	(preference-domain "com.apple.Preferences"))
(allow process-info*)
(allow process-info-listpids)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow process-info-dirtycontrol)
(allow process-info-rusage)
(allow pseudo-tty)
(allow signal
	(target self))
(allow sysctl-read)
(allow system-fsctl
	(fsctl-command (_IO "h" 32))
	(fsctl-command (_IO "h" 31)))
(allow system-privilege)
(allow system-sched
	(require-entitlement "com.apple.private.kernel.override-cpumon"))
(allow system-socket
	(socket-domain AF_ROUTE)
	(require-all
		(socket-domain AF_SYSTEM)
		(socket-protocol 2)))
